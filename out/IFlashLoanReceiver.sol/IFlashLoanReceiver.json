{
  "abi": [
    {
      "inputs": [],
      "name": "ADDRESSES_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL",
      "outputs": [
        {
          "internalType": "contract IPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "premiums",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "executeOperation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADDRESSES_PROVIDER()": "0542975c",
    "POOL()": "7535d246",
    "executeOperation(address[],uint256[],uint256[],address,bytes)": "920f5c84"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"premiums\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"Implement this interface to develop a flashloan-compatible flashLoanReceiver contract*\",\"kind\":\"dev\",\"methods\":{\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"details\":\"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount\",\"params\":{\"amounts\":\"The amounts of the flash-borrowed assets\",\"assets\":\"The addresses of the flash-borrowed assets\",\"initiator\":\"The address of the flashloan initiator\",\"params\":\"The byte-encoded params passed when initiating the flashloan\",\"premiums\":\"The fee of each flash-borrowed asset\"},\"returns\":{\"_0\":\"True if the execution of the operation succeeds, false otherwise\"}}},\"title\":\"IFlashLoanReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"notice\":\"Executes an operation after receiving the flash-borrowed assets\"}},\"notice\":\"Defines the basic interface of a flashloan-receiver contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol\":\"IFlashLoanReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aave-interfaces/=lib/aave-v3-core/contracts/interfaces/\",\":aave-v3-core/=lib/aave-v3-core/\",\":aave/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":ethers/=lib/ethers/\",\":flashloan-interfaces/=lib/aave-v3-core/contracts/flashloan/interfaces/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":synthetix/=lib/synthetix/contracts/\"]},\"sources\":{\"lib/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x41dca396a2fec74f12a59e14bf23eaf7a456ac9b1a402ee92085e97ff958239d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6e76642d5c7d398ac9ef7edd1bc9f3039de08afaae1fbecd6aa15be0192ecf96\",\"dweb:/ipfs/QmUNv2BntRLb9dEjBRBiEYU5wxzHVTsoAxhdPjykBpSab4\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xad2946be653bb9395f906614a0c62f37f8a44f3963e62f63f18a409dfbea51f2\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://03211ff615025ce38bc2588e8cce0e84dab1cb50c412f12fb63e506f715d65ae\",\"dweb:/ipfs/Qmda7kDHKfhy1t5TxBm8bnae6ewPQgNVMC5ErAstXdUgcs\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x2f70daa98416d61fd3128b1ee05f96852d84074689a2c2132a7fd587c5c9e3f0\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7843e6da934079a714ab1d4a67a81108d3722067bde86ae2a36b6a288ab4e353\",\"dweb:/ipfs/QmWa6zUZsKJa7wKY5msQCuN7vYxi5H4QJwnp6gF2QTWfPH\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xf3acc235689aae1094d33bfdf90e60b0c3ae1f12c5f095b8cffb69bc6880765c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2937f3e23de07b40eec53b9afb88cdfaf20a86e308c0cfc722092c73983260c0\",\"dweb:/ipfs/QmP9wdVoab7hDTg2aUW9LYBVcyy4iwEpj5FzmoozkpXSWn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADDRESSES_PROVIDER",
          "outputs": [
            {
              "internalType": "contract IPoolAddressesProvider",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POOL",
          "outputs": [
            {
              "internalType": "contract IPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "premiums",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOperation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "executeOperation(address[],uint256[],uint256[],address,bytes)": {
            "details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
            "params": {
              "amounts": "The amounts of the flash-borrowed assets",
              "assets": "The addresses of the flash-borrowed assets",
              "initiator": "The address of the flashloan initiator",
              "params": "The byte-encoded params passed when initiating the flashloan",
              "premiums": "The fee of each flash-borrowed asset"
            },
            "returns": {
              "_0": "True if the execution of the operation succeeds, false otherwise"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "executeOperation(address[],uint256[],uint256[],address,bytes)": {
            "notice": "Executes an operation after receiving the flash-borrowed assets"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":aave-interfaces/=lib/aave-v3-core/contracts/interfaces/",
        ":aave-v3-core/=lib/aave-v3-core/",
        ":aave/=lib/aave-v3-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":ethers/=lib/ethers/",
        ":flashloan-interfaces/=lib/aave-v3-core/contracts/flashloan/interfaces/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":synthetix/=lib/synthetix/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol": "IFlashLoanReceiver"
      },
      "libraries": {}
    },
    "sources": {
      "lib/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol": {
        "keccak256": "0x41dca396a2fec74f12a59e14bf23eaf7a456ac9b1a402ee92085e97ff958239d",
        "urls": [
          "bzz-raw://6e76642d5c7d398ac9ef7edd1bc9f3039de08afaae1fbecd6aa15be0192ecf96",
          "dweb:/ipfs/QmUNv2BntRLb9dEjBRBiEYU5wxzHVTsoAxhdPjykBpSab4"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xad2946be653bb9395f906614a0c62f37f8a44f3963e62f63f18a409dfbea51f2",
        "urls": [
          "bzz-raw://03211ff615025ce38bc2588e8cce0e84dab1cb50c412f12fb63e506f715d65ae",
          "dweb:/ipfs/Qmda7kDHKfhy1t5TxBm8bnae6ewPQgNVMC5ErAstXdUgcs"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x2f70daa98416d61fd3128b1ee05f96852d84074689a2c2132a7fd587c5c9e3f0",
        "urls": [
          "bzz-raw://7843e6da934079a714ab1d4a67a81108d3722067bde86ae2a36b6a288ab4e353",
          "dweb:/ipfs/QmWa6zUZsKJa7wKY5msQCuN7vYxi5H4QJwnp6gF2QTWfPH"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0xf3acc235689aae1094d33bfdf90e60b0c3ae1f12c5f095b8cffb69bc6880765c",
        "urls": [
          "bzz-raw://2937f3e23de07b40eec53b9afb88cdfaf20a86e308c0cfc722092c73983260c0",
          "dweb:/ipfs/QmP9wdVoab7hDTg2aUW9LYBVcyy4iwEpj5FzmoozkpXSWn"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol",
    "id": 39,
    "exportedSymbols": {
      "IFlashLoanReceiver": [
        38
      ],
      "IPool": [
        675
      ],
      "IPoolAddressesProvider": [
        884
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1396:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "37:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "62:83:0",
        "nodes": [],
        "absolutePath": "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol",
        "file": "../../interfaces/IPoolAddressesProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39,
        "sourceUnit": 885,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IPoolAddressesProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "70:22:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "146:49:0",
        "nodes": [],
        "absolutePath": "lib/aave-v3-core/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39,
        "sourceUnit": 676,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38,
        "nodeType": "ContractDefinition",
        "src": "418:1014:0",
        "nodes": [
          {
            "id": 25,
            "nodeType": "FunctionDefinition",
            "src": "1099:200:0",
            "nodes": [],
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "451:645:0",
              "text": " @notice Executes an operation after receiving the flash-borrowed assets\n @dev Ensure that the contract can return the debt + premium, e.g., has\n      enough funds to repay and has approved the Pool to pull the total amount\n @param assets The addresses of the flash-borrowed assets\n @param amounts The amounts of the flash-borrowed assets\n @param premiums The fee of each flash-borrowed asset\n @param initiator The address of the flashloan initiator\n @param params The byte-encoded params passed when initiating the flashloan\n @return True if the execution of the operation succeeds, false otherwise"
            },
            "functionSelector": "920f5c84",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeOperation",
            "nameLocation": "1108:16:0",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1149:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1130:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1130:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9,
                    "nodeType": "ArrayTypeName",
                    "src": "1130:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1180:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1161:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1161:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12,
                    "nodeType": "ArrayTypeName",
                    "src": "1161:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "premiums",
                  "nameLocation": "1212:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1193:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15,
                    "nodeType": "ArrayTypeName",
                    "src": "1193:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "1234:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1226:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1264:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1249:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:150:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1293:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:6:0"
            },
            "scope": 38,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31,
            "nodeType": "FunctionDefinition",
            "src": "1303:77:0",
            "nodes": [],
            "functionSelector": "0542975c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ADDRESSES_PROVIDER",
            "nameLocation": "1312:18:0",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "1356:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolAddressesProvider_$884",
                    "typeString": "contract IPoolAddressesProvider"
                  },
                  "typeName": {
                    "id": 28,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27,
                      "name": "IPoolAddressesProvider",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 884,
                      "src": "1356:22:0"
                    },
                    "referencedDeclaration": 884,
                    "src": "1356:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolAddressesProvider_$884",
                      "typeString": "contract IPoolAddressesProvider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:24:0"
            },
            "scope": 38,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37,
            "nodeType": "FunctionDefinition",
            "src": "1384:46:0",
            "nodes": [],
            "functionSelector": "7535d246",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "POOL",
            "nameLocation": "1393:4:0",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:2:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "1423:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPool_$675",
                    "typeString": "contract IPool"
                  },
                  "typeName": {
                    "id": 34,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33,
                      "name": "IPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 675,
                      "src": "1423:5:0"
                    },
                    "referencedDeclaration": 675,
                    "src": "1423:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$675",
                      "typeString": "contract IPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1422:7:0"
            },
            "scope": 38,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFlashLoanReceiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "197:220:0",
          "text": " @title IFlashLoanReceiver\n @author Aave\n @notice Defines the basic interface of a flashloan-receiver contract.\n @dev Implement this interface to develop a flashloan-compatible flashLoanReceiver contract*"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          38
        ],
        "name": "IFlashLoanReceiver",
        "nameLocation": "428:18:0",
        "scope": 39,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 0
}